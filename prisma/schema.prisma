generator client {
  provider = "prisma-client-js"
  //output   = "../generated/prisma"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

// https://github.com/prisma/prisma-examples/blob/latest/orm/nest/prisma/schema.prisma

// https://www.youtube.com/watch?v=TbAXNXM2ZVM

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  name      String?
  posts     Post[]

  @@map("user")
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  content   String?
  published Boolean? @default(false)

  author   User? @relation(fields: [authorId], references: [id])
  authorId Int?

  @@map("post")
}

// npx prisma db push  - пушим наши таблицы в БД

// npx prisma migrate dev --name add_createdAt_and_updatedAt_to_Post

// https://www.youtube.com/watch?v=tyCwTTcWcYE !!!!

// https://github.com/prisma/blog-backend-rest-api-nestjs-prisma/tree/main - Хороший пример как все устроено. 
// По запросу "https://github.com/search?q=prisma+nestjs&type=repositories"
